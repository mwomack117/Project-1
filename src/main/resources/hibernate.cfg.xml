<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration SYSTEM 
"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>
		<!--  JDBC database connection settings -->
		<property name="hibernate.connection.driver_class">org.mariadb.jdbc.Driver</property>
		<property name="hibernate.connection.url">jdbc:mariadb://localhost:3306/project_1_db_new</property>
		
		<!-- SQL Dialect -->
		<property name="hibernate.dialect">org.hibernate.dialect.MariaDB103Dialect</property>
		
		<!-- Show generated SQL queries -->
		<property name="show_sql">true</property>
		
		<!--  Used to create, update, or validate database schema -->
		<!--  Possible options:
		1. create - creates new database tables based on existing class mappings. If the tables already exist,
		it will drop the existing tables and recreate them
		2. update - update the existing tables to match the class mappings
		3. validate - validate existing tables against class mappings. If validation fails, application will not 
		work properly 
		4. create-drop - same as create, but will drop all tables once SessionFactory is closed -->
		<property name="hbm2ddl.auto">update</property>
		<!-- <property name="hbm2ddl.auto">create</property> -->
		<!-- Once all tables are setup and mapped to classes, switch from 'create' to 'validate' -->
		
		<!--  Specify our entity/class mappings here -->
		<mapping class="com.revature.models.User"></mapping>
		<mapping class="com.revature.models.UserRoles"></mapping>
		<mapping class="com.revature.models.Reimbursement"></mapping>
		<mapping class="com.revature.models.ReimbursementType"></mapping>
		<mapping class="com.revature.models.ReimbursementStatus"></mapping>
		
	</session-factory>

</hibernate-configuration>